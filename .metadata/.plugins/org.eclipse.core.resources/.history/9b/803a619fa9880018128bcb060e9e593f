package zhumeng.com.uimei.web.wxserver.util;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.alibaba.fastjson.JSONObject;

import zhumeng.com.uimei.common.ConfigUtil;
import zhumeng.com.uimei.common.HttpClientUtils;
import zhumeng.com.uimei.common.HttpUtils;
import zhumeng.com.uimei.model.dbo.wx.TWxApp;

/**
 * 获取基础accessToken
 * @author z
 *
 */
public class AccessTokenUtil {
	
	private static Logger logger = LoggerFactory.getLogger(AccessTokenUtil.class);	
	/** 获取token
	 * @Title: getAccessToken 
	 * @Description: TODO
	 * @param wxapp
	 * @param i
	 * @return
	 * @return: AccessToken
	 */
	public static  AccessToken getAccessToken(TWxApp wxapp){
		/*2、重新请求*/
		String requestUrl = ConfigUtil.get("access_token_url").replace("APPID", wxapp.getAppid()).replace("APPSECRET", wxapp.getAppsecret());
		JSONObject jsonObject = HttpClientUtils.httpsRequest(requestUrl, "GET", null);
		AccessToken accessToken=null;
		// 如果请求成功
		if (null != jsonObject) {
			try {
				accessToken = new AccessToken();
				accessToken.setToken(jsonObject.getString("access_token"));
				accessToken.setExpiresIn(jsonObject.getIntValue("expires_in"));
				accessToken.setCreateTime(System.currentTimeMillis());				
			} catch (Exception e) {
				accessToken = null;
				// 获取token失败
				logger.error("获取token失败 errcode:{"+jsonObject.getIntValue("errcode")+"} errmsg:{"+jsonObject.getString("errmsg")+"}" );
			}
		}
		return accessToken;
	}
	
	public static void refreshAccessToken(AccessToken accessToken,TWxApp wxapp){
		//刷新
		String requestUrl =  ConfigUtil.get("access_token_url").replace("APPID", wxapp.getAppid()).replace("APPSECRET", wxapp.getAppsecret());
		JSONObject jsonObject = HttpClientUtils.httpsRequest(requestUrl, "GET", null);
		// 如果请求成功
		if (null != jsonObject) {
			try {
				accessToken.setToken(jsonObject.getString("access_token"));
				accessToken.setExpiresIn(jsonObject.getIntValue("expires_in"));
				accessToken.setCreateTime(System.currentTimeMillis());
			} catch (Exception e) {
				accessToken = null;
				//刷新token失败
				logger.error("刷新token失败 errcode:{"+jsonObject.getIntValue("errcode")+"} errmsg:{"+jsonObject.getString("errmsg")+"}" );
			}
		}
	}
	
	public static Oauth2AccessToken getOauth2AccessToken (TWxApp wxapp,String code){
		String oauth2_access_token_url = ConfigUtil.get("oauth2_access_token_url").replace("APPID", wxapp.getAppid()).replace("SECRET", wxapp.getAppsecret()).replace("CODE", code);
		logger.debug("oauth2_access_token_url="+oauth2_access_token_url);
		JSONObject jsonObject =  HttpClientUtils.httpsRequest(oauth2_access_token_url, "GET",null); // 获取网页授权凭证
		logger.debug("jsonObject=="+jsonObject);
		if (jsonObject != null && jsonObject.containsKey("openid")) {
			Oauth2AccessToken accessToken = new Oauth2AccessToken();
			accessToken.setToken(jsonObject.getString("access_token"));
			accessToken.setExpiresIn(jsonObject.getIntValue("expires_in"));
			accessToken.setCreateTime(System.currentTimeMillis());
			accessToken.setOpenid(jsonObject.getString("openid"));
			accessToken.setScope(jsonObject.getString("scope"));
			return accessToken;
		}else{
			logger.error("oauth2 error"+jsonObject.toString());
			return null;
		}		
	}
}
